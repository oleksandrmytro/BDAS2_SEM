<!-- View/DoctorViews/AssignDiagnosisWindow.xaml -->
<Window x:Class="BDAS2_SEM.View.DoctorViews.AssignDiagnosisWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:BDAS2_SEM.ViewModel"
        xmlns:validation="clr-namespace:BDAS2_SEM.Validation"
        Title="Assign Diagnosis" Height="500" Width="600" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <!-- Styles similar to AssignAppointmentView.xaml -->

        <!-- Style for TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#e0e0e0"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Style for ComboBox -->
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#e0e0e0"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Style for TextBlock -->
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,5,10,5"/>
        </Style>

        <!-- Modern Button Style -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!-- Style for Delete Button (Red Circular) -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Background" Value="#FF4C4C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Remove Medicine"/>
        </Style>

        <!-- Style for Medicine Chip -->
        <Style x:Key="MedicineChipStyle" TargetType="Border">
            <Setter Property="Background" Value="#E0E0E0"/>
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <!-- Style for validation error -->
        <Style TargetType="TextBox" x:Key="ValidatedTextBoxStyle">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modified Error Template to Prevent ArgumentOutOfRangeException -->
        <ControlTemplate x:Key="ErrorTemplate">
            <DockPanel LastChildFill="True">
                <TextBlock Foreground="Red" DockPanel.Dock="Right" Margin="5,0,0,0" 
                           Text="!" 
                           Visibility="Collapsed">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(Validation.HasError)}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>

    <Grid Background="#F0F4F8" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Row 0 -->
            <RowDefinition Height="Auto"/>
            <!-- Row 1 -->
            <RowDefinition Height="Auto"/>
            <!-- Row 2 -->
            <RowDefinition Height="Auto"/>
            <!-- Row 3 -->
            <RowDefinition Height="Auto"/>
            <!-- Row 4 -->
            <RowDefinition Height="*"/>
            <!-- Row 5 -->
            <RowDefinition Height="Auto"/>
            <!-- Row 6 -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Diagnosis Name -->
        <TextBlock Grid.Row="0" Grid.Column="0" Text="Diagnosis Name:" VerticalAlignment="Center" Margin="0,0,10,10"/>
        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding NewDiagnozaNazev, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>

        <!-- Diagnosis Description -->
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Diagnosis Description:" VerticalAlignment="Top" Margin="0,0,10,10"/>
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding NewDiagnozaPopis, UpdateSourceTrigger=PropertyChanged}" Height="60" AcceptsReturn="True" TextWrapping="Wrap" Margin="0,0,0,10"/>

        <!-- Operation Name -->
        <TextBlock Grid.Row="2" Grid.Column="0" Text="Operation Name:" VerticalAlignment="Center" Margin="0,0,10,10"/>
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding NewOperationName, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource ValidatedTextBoxStyle}">
                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
                </Style>
            </TextBox.Style>
        </TextBox>

        <!-- Operation Date and Time -->
        <TextBlock Grid.Row="3" Grid.Column="0" Text="Operation Date and Time:" VerticalAlignment="Center" Margin="0,0,10,10"/>
        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="0,0,0,10">
            <DatePicker SelectedDate="{Binding NewOperationDate, UpdateSourceTrigger=PropertyChanged}" Width="150"/>
            <TextBox Width="100" Margin="10,0,0,0" 
                     ToolTip="Enter time in format HH:MM or HH:MM:SS">
                <TextBox.Text>
                    <Binding Path="NewOperationTimeString" UpdateSourceTrigger="LostFocus" 
                             ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <validation:TimeValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource ValidatedTextBoxStyle}">
                        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </StackPanel>

        <!-- Medicine Selection -->
        <TextBlock Grid.Row="4" Grid.Column="0" Text="Select Medicine:" VerticalAlignment="Center" Margin="0,0,10,10"/>
        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" Margin="0,0,0,10">
            <ComboBox ItemsSource="{Binding Leks}"
                      SelectedItem="{Binding SelectedLek}"
                      DisplayMemberPath="Nazev"
                      Width="200"/>
            <Button Content="Add Medicine"
                    Command="{Binding AddLekToDiagnosisCommand}"
                    Style="{StaticResource ModernButtonStyle}"
                    Margin="10,5,0,5"/>
        </StackPanel>

        <!-- Selected Medicines List -->
        <TextBlock Grid.Row="5" Grid.Column="0" Text="Selected Medicines:" VerticalAlignment="Top" Margin="0,0,10,10"/>
        <ScrollViewer Grid.Row="5" Grid.Column="1" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding SelectedLeks}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border Style="{StaticResource MedicineChipStyle}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Nazev}" VerticalAlignment="Center"/>
                                <Button Content="X" 
                                        Command="{Binding DataContext.RemoveLekFromDiagnosisCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}" 
                                        Style="{StaticResource DeleteButtonStyle}"
                                        Margin="5,0,0,0"/>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!-- Action Buttons -->
        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Assign" Command="{Binding AssignDiagnosisCommand}" Style="{StaticResource ModernButtonStyle}" Width="100" Margin="0,0,10,0"/>
            <Button Content="Cancel" Command="{Binding CancelCommand}" Style="{StaticResource ModernButtonStyle}" Background="#D9534F" Width="100" Margin="0,0,10,0"/>
        </StackPanel>
    </Grid>
</Window>